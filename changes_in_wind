import pandas as pd

def calculate_german_mortgage(principal, rates):
    """
    Calculates the amortization schedule for a German mortgage.

    Parameters:
        principal : initial amount of the loan.
        rates :  sequence of interest rates 

    Returns:
        A Pandas DataFrame with the columns:
            - 'Period': The period number.
            - 'Payment': Total payment for the period (constant principal + interest).
            - 'Principal Paid': The constant amount of principal paid each period.
            - 'Interest Paid': The interest paid for the period.
            - 'Remaining Principal': The outstanding principal after the payment.
    """
    
    n_periods = len(rates)
    constant_principal = principal / n_periods
    

    df = pd.DataFrame({
        'Period': range(1, n_periods + 1),
        'Rate': rates
    })
    

    df['Starting Balance'] = principal - constant_principal * (df['Period'] - 1)
    df['Interest Paid'] = df['Starting Balance'] * df['Rate']
    df['Payment'] = constant_principal + df['Interest Paid']
    df['Principal Paid'] = constant_principal
    df['Remaining Principal'] = df['Starting Balance'] - constant_principal
    df = df[['Period', 'Payment', 'Principal Paid', 'Interest Paid', 'Remaining Principal']]
    
    return df


rates = [0.05, 0.045, 0.04, 0.035, 0.03]
principal = 100000.0
amortization= calculate_german_mortgage(principal, rates)


amortization
