import numpy as np

def calculate_payments(principal, rates):
    """
    Calculates the payments for a mortgage with variable interest rates using the French amortization method.

    Parameters:
      - principal: The initial loan amount.
      - rates: A list or array of periodic interest rates (in decimal) for each period.
               The number of rates determines the total number of periods.

    Returns:
      - A dictionary containing NumPy arrays with:
          "period": The period number.
          "payment": The total payment for the period.
          "interest": The interest portion of the payment.
          "amortization": The principal portion paid in that period.
          "remaining": The remaining outstanding principal after the payment.
          
    Note: If the rate is zero for any period, the remaining principal is evenly divided over the remaining periods.
    """
    rates = np.array(rates)  # Ensure rates is a NumPy array
    n = len(rates)
    
    # Initialize arrays to store the results
    payment_arr = np.zeros(n)
    interest_arr = np.zeros(n)
    amortization_arr = np.zeros(n)
    remaining_arr = np.zeros(n + 1)
    
    remaining_arr[0] = principal

    # Process each period
    for i in range(n):
        remaining_periods = n - i
        rate = rates[i]
        
        if rate == 0:
            payment = remaining_arr[i] / remaining_periods
        else:
            payment = remaining_arr[i] * rate / (1 - (1 + rate) ** (-remaining_periods))
        
        payment_arr[i] = payment
        interest_arr[i] = remaining_arr[i] * rate
        amortization_arr[i] = payment - interest_arr[i]
        remaining_arr[i + 1] = remaining_arr[i] - amortization_arr[i]

    return {
        "period": np.arange(1, n + 1),
        "payment": payment_arr,
        "interest": interest_arr,
        "amortization": amortization_arr,
        "remaining": remaining_arr[1:]
    }

if __name__ == "__main__":
    # Test data: a loan of 100,000 units over 12 periods with variable interest rates
    principal = 100000
    rates = [0.005, 0.005, 0.0045, 0.0045, 0.0055, 0.0055, 0.005, 0.005, 0.0048, 0.0048, 0.0052, 0.0052]
    
    results = calculate_payments(principal, rates)
    
    print("Mortgage Payment Details:")
    for i in range(len(rates)):
        print(f"Period {results['period'][i]}: Payment = {results['payment'][i]:.2f}, "
              f"Interest = {results['interest'][i]:.2f}, "
              f"Amortization = {results['amortization'][i]:.2f}, "
              f"Remaining Principal = {results['remaining'][i]:.2f}")
